# If you come from bash you might have to change your $PATH.
#export PATH=$PATH:$HOME/bin:/usr/local/bin

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

DISABLE_UPDATE_PROMPT=true
#DISABLE_AUTO_UPDATE=true

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

ZSH_THEME=`cat ~/.zshtheme`
#ZSH_THEME="robbyrussell" #default

#ZSH_THEME="alanpeabody" #too dark
#ZSH_THEME="clean" #don't need time on right
#ZSH_THEME="fishy" #shortened the dir path
#ZSH_THEME="geoffgarside" #don't need time
#ZSH_THEME="gianu" #not full path
#ZSH_THEME="jreese" #wierd colors
#ZSH_THEME="lukerandall" #Great! Same colors as current bash settings
#ZSH_THEME="maran" #extra space and "git:"
#ZSH_THEME="michelebologna" #no error code printing
#ZSH_THEME="risto" #no error code printing

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
 COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git emacs python rsync sudo tmux command-not-found wd docker)

source $ZSH/oh-my-zsh.sh

# User configuration
export PYTHONPATH="$PYTHONPATH: /usr/local/lib/python3.5/dist-packages/"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#https://stackoverflow.com/questions/5130968/how-can-i-copy-the-output-of-a-command-directly-into-my-clipboard
alias "c=xclip"
alias "v=xclip -o"
alias "cs=xclip -selection clipboard"
alias "vs=xclip -o -selection clipboard"
#https://stackoverflow.com/questions/10190358/how-to-use-emacsclient-on-root-files-using-sudo-and-a-single-daemon#10191436
alias "e=emacsclient -t -a=" #emacs
alias "se=SUDO_EDITOR='emacsclient -t -a=' sudoedit" #sudo emacs
alias "ew=emacsclient -c --no-wait -a=" #emacs window
alias "sew=SUDO_EDITOR='emacsclient -c -a=' sudoedit" #sudo emacs window
alias "wcl=wc -l"
alias "t=tmux attach || tmux"
alias "tdt=tmux detach"
#alias "n=nemo . &"
alias "sopen=gksu xdg-open"
alias sudo='sudo '

#alias apt='sudo apt'
#alias ins='sudo apt install'
#alias rem='sudo apt autoremove --purge'
#alias upd='sudo apt update;apt list --upgradeable'
#alias upg='sudo apt upgrade;cat /var/run/reboot-required||echo "no restart needed :)"'
#alias dupg='sudo apt dist-upgrade;cat /var/run/reboot-required||echo "no restart needed :)"'

alias "pacman=sudo pacman"
alias "ins=sudo pacman -Sy"
alias "rem=sudo pacman -Rdd"
alias "upd=sudo pacman -Syy"
alias "upg=sudo pacman -Syu"

#alias "ins=aurman -S"
#alias "rem=aurman -R"

#alias "dnf=sudo dnf"
#alias "ins=sudo dnf install"
#alias "rem=sudo dnf remove"
#alias "upd=sudo dnf check-update"
#alias "upg=sudo dnf upgrade"

#ins(){
#    PACMAN_LIST=
#    AUR_LIST=
#    for item in $@
#    do
#	echo -n "Looking up $item... "
#	if pkgfile "$item" > /dev/null; then
#	    PACMAN_LIST="$PACMAN_LIST $item"
#	    echo "found in official repos"
#	else
#	    AUR_LIST="$AUR_LIST $item"
#	    echo "not found in official repos, will try AUR later"
#	fi
#    done
#    echo "pacman:$PACMAN_LIST"
#    echo "aurman:$AUR_LIST"
#    if [[ ! -z "$PACMAN_LIST" ]]; then
#	echo sudo pacman -Sy $PACMAN_LIST
#	sudo pacman -Sy `echo $PACMAN_LIST`
#    fi
#    if [[ ! -z "$AUR_LIST" ]]; then
#	echo aurman -S $AUR_LIST
#	aurman -S `echo $AUR_LIST`
#    fi
#}

i(){
    cols=`tput cols`
    if [[ $# -eq 0 ]]; then
	      i .
    fi
    while [[ $# -ne 0 ]]; do
        printf '=%.0s' {1..$cols}
        if [[ -f "$1" ]]; then
            cat "$1"
        else
            l "$1"
        fi
        printf '-%.0s' {1..$cols}
        l -d "$1"
        shift
    done
}

open(){
    xdg-open $@ &
}

f(){
    fm=nautilus
    #fm=nemo
    if [[ $# == 0 ]]
    then
        $fm . &
    else
        $fm $@ &
    fi
}

#wind = find | wc -l
wind(){
    find $@ | wc -l
}


#key bindings
bindkey '^H' backward-kill-word
bindkey -M emacs '^[[3;5~' kill-word

#autocomplete
setopt completealiases

#The program 'xyz' is not currently installed. You can install it by typing...
#. /etc/zsh_command_not_found

#start in custom directory
#if [[ `pwd` == "$HOME" ]]
#then
#    cd /DATA/
#fi
