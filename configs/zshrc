NPM_PACKAGES="${HOME}/.npm-packages"

export PATH="$PATH:$NPM_PACKAGES/bin"

# Preserve MANPATH if you already defined it somewhere in your config.
# Otherwise, fall back to `manpath` so we can inherit from `/etc/manpath`.
export MANPATH="${MANPATH-$(manpath)}:$NPM_PACKAGES/share/man"

SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

# If you come from bash you might have to change your $PATH.
#export PATH=$HOME/bin::/usr/local/bin:$PATH:$HOME/go/bin
export PATH=$PATH:$HOME/nextcloud/bin

# Path to your oh-my-zsh installation.
export ZSH="/home/johanv/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME=`cat ~/.zshtheme`
#ZSH_THEME="robbyrussell" #default

#ZSH_THEME="alanpeabody" #too dark
#ZSH_THEME="clean" #don't need time on right
#ZSH_THEME="fishy" #shortened the dir path
#ZSH_THEME="geoffgarside" #don't need time
#ZSH_THEME="gianu" #not full path
#ZSH_THEME="jreese" #weird colors
#ZSH_THEME="lukerandall" #Great! Same colors as current bash settings
#ZSH_THEME="maran" #extra space and "git:"
#ZSH_THEME="michelebologna" #no error code printing
#ZSH_THEME="risto" #no error code printing

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
 COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git emacs python rsync sudo tmux command-not-found wd docker man nmap python ubuntu ufw z zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#https://stackoverflow.com/questions/5130968/how-can-i-copy-the-output-of-a-command-directly-into-my-clipboard
alias "c=xclip"
alias "v=xclip -o"
alias "cs=xclip -selection clipboard"
alias "vs=xclip -o -selection clipboard"

alias "gs=git status"
alias "gd=git diff"
alias "gcsam=git commit -S -am"
alias "gcsm=git commit -S -m"
alias "gpa=git pushall"

alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '

# the terminal rickroll
alias rr='curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash'

alias "e=nano"
#https://stackoverflow.com/questions/10190358/how-to-use-emacsclient-on-root-files-using-sudo-and-a-single-daemon#10191436
#alias "e=emacsclient -t -a=" #emacs
#alias "se=SUDO_EDITOR='emacsclient -t -a=' sudoedit" #sudo emacs
#alias "ew=emacsclient -c --no-wait -a=" #emacs window
#alias "sew=SUDO_EDITOR='emacsclient -c -a=' sudoedit" #sudo emacs window
alias "wcl=wc -l"
alias "t=tmux attach || tmux"
alias "tdt=tmux detach"
#alias "n=nemo . &"
#alias "sopen=gksu xdg-open"
alias sudo='sudo '

#alias apt='sudo apt'
#alias ins='sudo apt install'
#alias rem='sudo apt autoremove --purge'
#alias upd='sudo apt update;apt list --upgradeable'
#alias upg='sudo apt upgrade;cat /var/run/reboot-required||echo "no restart needed :)"'
#alias dupg='sudo apt dist-upgrade;cat /var/run/reboot-required||echo "no restart needed :)"'

alias "pacman=sudo pacman"
alias "ins=sudo pacman -Sy"
alias "rem=sudo pacman -Rdd"
alias "upd=sudo pacman -Syy"
alias "upg=sudo pacman -Syu"

#alias "ins=aurman -S"
#alias "rem=aurman -R"

#alias "dnf=sudo dnf"
#alias "ins=sudo dnf install"
#alias "rem=sudo dnf remove"
#alias "upd=sudo dnf check-update"
#alias "upg=sudo dnf upgrade"

#ins(){
#    PACMAN_LIST=
#    AUR_LIST=
#    for item in $@
#    do
#	echo -n "Looking up $item... "
#	if pkgfile "$item" > /dev/null; then
#	    PACMAN_LIST="$PACMAN_LIST $item"
#	    echo "found in official repos"
#	else
#	    AUR_LIST="$AUR_LIST $item"
#	    echo "not found in official repos, will try AUR later"
#	fi
#    done
#    echo "pacman:$PACMAN_LIST"
#    echo "aurman:$AUR_LIST"
#    if [[ ! -z "$PACMAN_LIST" ]]; then
#	echo sudo pacman -Sy $PACMAN_LIST
#	sudo pacman -Sy `echo $PACMAN_LIST`
#    fi
#    if [[ ! -z "$AUR_LIST" ]]; then
#	echo aurman -S $AUR_LIST
#	aurman -S `echo $AUR_LIST`
#    fi
#}

i(){
    cols=`tput cols`
    if [[ $# -eq 0 ]]; then
	      i .
    fi
    while [[ $# -ne 0 ]]; do
        printf '=%.0s' {1..$cols}
        if [[ -f "$1" ]]; then
            cat "$1"
        else
            l "$1"
        fi
        printf '-%.0s' {1..$cols}
        l -d "$1"
        shift
    done
}

open(){
    xdg-open $@ &
}

f(){
    #fm=nautilus
    #fm=nemo
    fm=dolphin
    if [[ $# == 0 ]]
    then
        $fm . &
    else
        $fm $@ &
    fi
}

#wind = find | wc -l
wind(){
    find $@ | wc -l
}


#key bindings
bindkey '^H' backward-kill-word
bindkey -M emacs '^[[3;5~' kill-word

#autocomplete
setopt completealiases

#The program 'xyz' is not currently installed. You can install it by typing...
#. /etc/zsh_command_not_found

notica() { curl --data "d:$*" "https://notica.us/?gcbIuM" ; }
notica-web() {xdg-open "https://notica.us/?gcbIuM"}

#source $HOME/.cargo/env
